package com.example.soop2025.data.model.repos

import com.example.soop2025.data.model.shared.LicenseResponse
import com.example.soop2025.data.model.shared.OwnerResponse
import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonElement

@Serializable
data class ReposResponse(
    @SerialName("id") val id: Long,
    @SerialName("node_id") val nodeId: String,
    @SerialName("name") val name: String,
    @SerialName("full_name") val fullName: String,
    @SerialName("owner") val owner: OwnerResponse,
    @SerialName("private") val isPrivate: Boolean,
    @SerialName("html_url") val htmlUrl: String,
    @SerialName("description") val description: String? = null,
    @SerialName("fork") val isFork: Boolean,
    @SerialName("url") val url: String,
    @SerialName("archive_url") val archiveUrl: String,
    @SerialName("assignees_url") val assigneesUrl: String,
    @SerialName("blobs_url") val blobsUrl: String,
    @SerialName("branches_url") val branchesUrl: String,
    @SerialName("collaborators_url") val collaboratorsUrl: String,
    @SerialName("comments_url") val commentsUrl: String,
    @SerialName("commits_url") val commitsUrl: String,
    @SerialName("compare_url") val compareUrl: String,
    @SerialName("contents_url") val contentsUrl: String,
    @SerialName("contributors_url") val contributorsUrl: String,
    @SerialName("deployments_url") val deploymentsUrl: String,
    @SerialName("downloads_url") val downloadsUrl: String,
    @SerialName("events_url") val eventsUrl: String,
    @SerialName("forks_url") val forksUrl: String,
    @SerialName("git_commits_url") val gitCommitsUrl: String,
    @SerialName("git_refs_url") val gitRefsUrl: String,
    @SerialName("git_tags_url") val gitTagsUrl: String,
    @SerialName("git_url") val gitUrl: String,
    @SerialName("issue_comment_url") val issueCommentUrl: String,
    @SerialName("issue_events_url") val issueEventsUrl: String,
    @SerialName("issues_url") val issuesUrl: String,
    @SerialName("keys_url") val keysUrl: String,
    @SerialName("labels_url") val labelsUrl: String,
    @SerialName("languages_url") val languagesUrl: String,
    @SerialName("merges_url") val mergesUrl: String,
    @SerialName("milestones_url") val milestonesUrl: String,
    @SerialName("notifications_url") val notificationsUrl: String,
    @SerialName("pulls_url") val pullsUrl: String,
    @SerialName("releases_url") val releasesUrl: String,
    @SerialName("ssh_url") val sshUrl: String,
    @SerialName("stargazers_url") val stargazersUrl: String,
    @SerialName("statuses_url") val statusesUrl: String,
    @SerialName("subscribers_url") val subscribersUrl: String,
    @SerialName("subscription_url") val subscriptionUrl: String,
    @SerialName("tags_url") val tagsUrl: String,
    @SerialName("teams_url") val teamsUrl: String,
    @SerialName("trees_url") val treesUrl: String,
    @SerialName("clone_url") val cloneUrl: String,
    @SerialName("mirror_url") val mirrorUrl: String? = null,
    @SerialName("hooks_url") val hooksUrl: String,
    @SerialName("svn_url") val svnUrl: String,
    @SerialName("homepage") val homepage: String? = null,
    @SerialName("language") val language: String? = null,
    @SerialName("forks_count") val forksCount: Int,
    @SerialName("stargazers_count") val stargazersCount: Int,
    @SerialName("watchers_count") val watchersCount: Int,
    @SerialName("size") val size: Int,
    @SerialName("allow_forking") val allowForking: Boolean,
    @SerialName("is_template") val isTemplate: Boolean,
    @SerialName("web_commit_signoff_required") val webCommitSignOffRequired: Boolean,
    @SerialName("topics") val topics: List<String>,
    @SerialName("has_issues") val hasIssues: Boolean,
    @SerialName("has_projects") val hasProjects: Boolean,
    @SerialName("has_wiki") val hasWiki: Boolean,
    @SerialName("has_pages") val hasPages: Boolean,
    @SerialName("has_downloads") val hasDownloads: Boolean,
    @SerialName("has_discussions") val hasDiscussions: Boolean,
    @SerialName("archived") val isArchived: Boolean,
    @SerialName("disabled") val isDisabled: Boolean,
    @SerialName("pushed_at") val pushedAt: String? = null,
    @SerialName("created_at") val createdAt: String? = null,
    @SerialName("updated_at") val updatedAt: String? = null,
    @SerialName("license") val license: LicenseResponse? = null,
    @SerialName("subscribers_count") val subscribersCount: Int,
    @SerialName("network_count") val networkCount: Int,
    @SerialName("visibility") val visibility: String,
    @SerialName("forks") val forks: Int,
    @SerialName("open_issues_count") val openIssuesCount: Int,
    @SerialName("open_issues") val openIssues: Int,
    @SerialName("watchers") val watchers: Int,
    @SerialName("default_branch") val defaultBranch: String,
    @SerialName("custom_properties") val customProperties: Map<String, JsonElement> = emptyMap(),
    @SerialName("temp_clone_token") val tempCloneToken: String? = null,
    @SerialName("organization") val organization: OwnerResponse? = null,
    @SerialName("source") val source: ReposSummaryResponse? = null,
    @SerialName("parent") val parent: ReposSummaryResponse? = null
)
